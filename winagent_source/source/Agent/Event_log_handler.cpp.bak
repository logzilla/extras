/* SyslogAgent: a syslog agent for Windows
Copyright © 2019 Syterra Software Inc.

This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
*/

#include "stdafx.h"
#include "Event_log_handler.h"
#include "Syslog_event.h"
#include "Logger.h"

using namespace Syslog_agent;

Event_log_handler::Event_log_handler(Configuration& config, Event_log_converter& converter, Queue& queue)
    : queue(queue), config(config), converter(converter) {}

bool Event_log_handler::handle(Log_configuration& log_config, EVENTLOGRECORD* record) const {
    if (config.event_id_filter.find(record->EventID & 0xffff) != config.event_id_filter.end()) return true;

    if (queue.is_full()) return false;

    Syslog_event event(config);
    converter.load(log_config, &event, record);
    string message;
    if (config.use_RFC3164) {
        event.output_3164(message, config.host_name);
    }
    else {
        event.output_5424(message, config.host_name);
    }
    Logger::debug(message.c_str());
    queue.push_back(message);
    return true;
}
